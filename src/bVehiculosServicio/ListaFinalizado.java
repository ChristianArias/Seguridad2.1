/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bVehiculosServicio;

import Conexion.Conector;
import Inicio.Sesion;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author ChristianArias
 */
public final class ListaFinalizado extends javax.swing.JInternalFrame {

    /**
     * Creates new form Lista
     */
    
    SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
    int sel = 0;
    String rango = "";
    
    public ListaFinalizado() {
        initComponents();
        setFrameIcon(new javax.swing.ImageIcon(ClassLoader.getSystemResource("Iconos/car.png")));
        jDateChooser1.setVisible(false);
        jDateChooser2.setVisible(false);
        jDateChooser1.setDate(new other.hora().date());
        jDateChooser2.setDate(new other.hora().date());
        Dimension pantalla = Principal.Escritorio.vPantalla.getSize();
        setSize(pantalla.width-5,pantalla.height-5);
        modelo();
        setCellRenderer(jTable1);
        ScheduledExecutorService timer = Executors.newSingleThreadScheduledExecutor();
            timer.scheduleAtFixedRate(tarea, 1, 80, TimeUnit.SECONDS);
        setTitle("Registro ordenes de vehiculos finalizadas "+Sesion.nombreagencia);
        jLabel1.setText(Sesion.nombreagencia);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        Resultados = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();

        setMaximizable(true);
        setResizable(true);
        setTitle("Registro vehiculos");
        setToolTipText("Doble click para seleccionar");

        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jTable1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        jButton1.setText("Buscar");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        Resultados.setText(" ");

        jMenu1.setText("Archivo");

        jMenu2.setText("Exportar");

        jMenuItem3.setText("Excel");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenu1.add(jMenu2);
        jMenu1.add(jSeparator1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Herramientas");

        jCheckBoxMenuItem1.setText("Rango de fechas");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItem1);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 818, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
            .addComponent(Resultados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jLabel1))
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Resultados))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        int col = jTable1.getSelectedColumn();
        if(row!=-1){
            sel = Integer.parseInt(String.valueOf(jTable1.getModel().getValueAt(row, 0)));
            switch(evt.getClickCount()){
                case 2:
                    switch(col){
                        case 10:
                            actHora();
                            break;
                        case 11:
                            actHora();
                            break;
                        default:
                            new Thread(() -> { new other.mostrarFrame().mostrar(new Nuevo(sel)); }).start();
                            break;
                    }
                    break;
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        jTable1.setModel(cargar());
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTable1.setModel(cargar());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        jTable1.setModel(cargar());
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        //javax.swing.JTable[] tablas = {jTable1};
        DefaultTableModel[] tablas = {(DefaultTableModel)jTable1.getModel()};
        new other.exportarTxt().exportar(tablas, getTitle(),"txt");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    void rango(){
        if(jCheckBoxMenuItem1.isSelected()){
            jDateChooser1.setVisible(true);jDateChooser2.setVisible(true);
            
            if(jDateChooser1.getDate().before(jDateChooser2.getDate())){
                rango = textoRango();
            }else if(jDateChooser1.getDate().equals(jDateChooser2.getDate())){
                rango = textoRango();
            }else if(jDateChooser2.getDate().before(jDateChooser1.getDate())){
                Logs.emergente.mostrar("Verifica las fechas fecha inicial es mayor a fecha limite", "Mensaje");
            }
        }else{
            jDateChooser1.setVisible(false);jDateChooser2.setVisible(false);
            rango = "";
        }
    }
    
    String textoRango(){
        return "AND fechaEntrada BETWEEN '" 
                    + String.valueOf(dcn.format(jDateChooser1.getDate())) 
                    + "' AND '"
                    + String.valueOf(dcn.format(jDateChooser2.getDate()))
                    + "' ";
    }
    
    public void setCellRenderer(JTable jTable1) {
        Enumeration<TableColumn> en = jTable1.getColumnModel().getColumns();
        while (en.hasMoreElements()) {
            TableColumn tc = en.nextElement();
            tc.setCellRenderer(new other.CellRenderer());
        }
    }
    
    void modelo(){
        String titulos[] = null ;
        if(Inicio.Sesion.admin){
            titulos = new String[17];
                titulos[0] = "";
                titulos[1] = "Placas";
                titulos[2] = "Vehiculo";
                titulos[3] = "Torre";
                titulos[4] = "Folio";
                titulos[5] = "Asesor";
                titulos[6] = "No. orden";
                titulos[7] = "Agencia";
                titulos[8] = "Area";
                titulos[9] = "Fecha entrada";
                titulos[10] = "Hora entrada";
                titulos[11] = "Fecha Salida";
                titulos[12] = "Hora Salida";
                titulos[13] = "Tiempo transcurrido";
                titulos[14] = "Creo";
                titulos[15] = "Actualizo";
                titulos[16] = "Fecha";
        }else{
            titulos = new String[14];
                titulos[0] = "";
                titulos[1] = "Placas";
                titulos[2] = "Vehiculo";
                titulos[3] = "Torre";
                titulos[4] = "Folio";
                titulos[5] = "Asesor";
                titulos[6] = "No. orden";
                titulos[7] = "Agencia";
                titulos[8] = "Area";
                titulos[9] = "Fecha entrada";
                titulos[10] = "Hora entrada";
                titulos[11] = "Fecha Salida";
                titulos[12] = "Hora Salida";
                titulos[13] = "Tiempo transcurrido";
        }
        jTable1.setModel(new DefaultTableModel(null,titulos));
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
    }
    
    DefaultTableModel cargar(){
        rango();
        Connection cn = Conector.conexion();
        DefaultTableModel model =(DefaultTableModel)jTable1.getModel();
        try{
            String sql = "SELECT * FROM vistaRegistroVehiculosInactivos WHERE "
                    + "(placas LIKE ? OR orden LIKE ? OR folio LIKE ? OR vehiculo LIKE ? OR asesor LIKE ?)"
                    + " AND _agencia LIKE ? "
                    + rango;
            Object [] registros = new Object [jTable1.getColumnCount()];
            int x = 0;
            String aux = null;
            model.setRowCount(0);
            PreparedStatement pst = cn.prepareStatement(sql);
                pst.setString(1, "%"+jTextField1.getText()+"%");
                pst.setString(2, "%"+jTextField1.getText()+"%");
                pst.setString(3, "%"+jTextField1.getText()+"%");
                pst.setString(4, "%"+jTextField1.getText()+"%");
                pst.setString(5, "%"+jTextField1.getText()+"%");
                pst.setString(6, "%"+Sesion.nombreagencia+"%");
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                //JButton l = new JButton();
                //    l.setBackground(new Color(rs.getInt("color")));
                registros[0] = rs.getString("id");
                registros[1] = rs.getString("placas");
                registros[2] = rs.getString("vehiculo");
                registros[3] = rs.getString("torre");
                registros[4] = rs.getString("folio");//l;
                registros[5] = rs.getString("asesor");
                registros[6] = rs.getString("orden");
                registros[7] = rs.getString("_agencia");
                registros[8] = rs.getString("_departamento");
                registros[9] = rs.getString("fechaEntrada");
                registros[10] = rs.getString("horaEntrada");
                registros[11] = rs.getString("fechaSalida");
                registros[12] = rs.getString("horaSalida");
                registros[13] = rs.getString("tiempo");
                if(Inicio.Sesion.admin){
                    registros[14] = rs.getString("creador");
                    registros[15] = rs.getString("editor");
                    registros[16] = rs.getString("fechaAct");
                }
                
                model.addRow(registros);
                x = rs.getRow();
                aux = Integer.toString(x);
            }
            Resultados.setText(model.getRowCount()+" Resultados");
            model.fireTableDataChanged();
        }catch(SQLException e){
            new Logs.Error().error(e.getMessage());
        }
        try{
            jTable1.getValueAt(0, jTable1.getColumnCount()).getClass();
        }catch(Exception e){
            //new Logs.Error().error(e.getMessage());
        }
        try{ cn.close(); }catch(SQLException e){ new Logs.Error().error(e.getMessage()); }
        return model;
    }
        
    void actHora(){
        Connection cn = Conector.conexion();
        try{
            String sql = "UPDATE registrovehiculos SET "
                    + "fechaSalida = now() , horaSalida = now(),edito = ?,fechaAct = now() WHERE id = ?";
            PreparedStatement pst = cn.prepareStatement(sql);
                pst.setInt(1, Inicio.Sesion.id);
                pst.setInt(2, sel);
            int n = pst.executeUpdate();
            if(n>0){
                Logs.emergente.mostrar("Hora actualizada", "Mensaje");
                jTable1.setModel(cargar());
            }
        }catch(SQLException e){
            new Logs.Error().error(e.getMessage());
        }
        try{ cn.close(); }catch(SQLException e){ new Logs.Error().error(e.getMessage()); }
    }
    
    public Runnable tarea = () -> { load(); };
    
    public void load(){ jTable1.setModel(cargar()); }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Resultados;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
