/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dataAnalice;

import Conexion.Conector;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DropMode;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.TransferHandler;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 * @author ChristianArias
 */
public final class Principal extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form Principal
     */
    
    int cont = 0;
    DefaultTreeModel modelo = null;
    DefaultMutableTreeNode Titulo = null;
    Bll obj=new Bll();
    String res = "";
    int tmp = 0;
    
    public Principal() {
        initComponents();
        setSize(new Dimension(
                        Toolkit.getDefaultToolkit().getScreenSize().width   - 100,
                        Toolkit.getDefaultToolkit().getScreenSize().height  - 200));
        
        jSplitPane1.setDividerLocation(Toolkit.getDefaultToolkit().getScreenSize().width   - 300);
        setLocationRelativeTo(null);
        addPanel();
        setIconImage(new other.Logo().imagen("Fondo","Logo.png"));
        setTitle("Data analice '"+Conexion.Conector.base+"'");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSplitPane1 = new javax.swing.JSplitPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenuItem3.setText("jMenuItem3");
        jPopupMenu1.add(jMenuItem3);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setDragEnabled(true);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jSplitPane1.setDividerLocation(650);
        jSplitPane1.setDividerSize(15);
        jSplitPane1.setOneTouchExpandable(true);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setDragEnabled(true);
        jTree1.setFocusable(false);
        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Tablas", jPanel1);

        jSplitPane1.setRightComponent(jTabbedPane2);

        jTabbedPane1.setFocusable(false);
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });
        jSplitPane1.setLeftComponent(jTabbedPane1);

        jMenu1.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Nueva consulta");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 816, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        //addPanel();
        jTree1.setModel(cargarArbol());
    }//GEN-LAST:event_formWindowActivated

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        addPanel();
        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    void addPanel(){
        cont += 1;
                
        JPanel panel = new JPanel();
        JTable jtb = new JTable();
            jtb.getTableHeader().setReorderingAllowed(true);
            jtb.getTableHeader().setResizingAllowed(true);
            jtb.setDragEnabled(true);
            jtb.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
            
        JPopupMenu pop = new JPopupMenu();
        JMenuItem newtab = new JMenuItem("Agregar pesta√±a de resultados");
        JMenu exp = new JMenu("Exportar");
        JMenuItem expCSV = new JMenuItem("CSV");
        JMenuItem copyrowvalue = new JMenuItem("Copiar valor");
        JMenuItem ver = new JMenuItem("Ver valor");
        
            newtab.addActionListener(this);
            
            exp.add(expCSV);
            pop.add(newtab);
            pop.add(new JSeparator());
            pop.add(exp);
            pop.add(new JSeparator());
            pop.add(copyrowvalue);
            pop.add(new JSeparator());
            pop.add(ver);
            
            jtb.setComponentPopupMenu(pop);
            
        JScrollPane jsp = new javax.swing.JScrollPane();
            jsp.setViewportView(jtb);
        JLabel lb = new JLabel();
        
        JMenuBar jmb = new JMenuBar();
        JMenu jma = new JMenu("Archivo");
        JMenuItem exportar = new JMenuItem("Exportar a excel");
        JMenuItem fin = new JMenuItem("Terminar 'pesta√±a"+cont+" '");
            jmb.add(jma);
            jma.add(exportar);
            jma.add(fin);
        
            exportar.addActionListener((ActionEvent e) -> {
                DefaultTableModel[] tablas = {(DefaultTableModel)jtb.getModel()};
                new other.exportarTxt().exportar(tablas, getTitle(),"txt");
            });
            fin.addActionListener((ActionEvent e) -> {
                int pestanas = jTabbedPane1.getTabCount();
                if(pestanas<=1){dispose();}
                else{jTabbedPane1.remove(jTabbedPane1.getSelectedIndex());}
            });
            
        
        JPanel botonera = new JPanel();
        JTextPane jtaconsulta = new JTextPane();
            //jtaconsulta.setRows(4);
            jtaconsulta.setText("SELECT * FROM ");
        JButton btncon = new JButton("Consultar");
            btncon.setBackground(Color.white);
            btncon.setFocusable(false);
            
            btncon.addActionListener((ActionEvent e) -> {
                String sql = jtaconsulta.getText();
                if(sql.toUpperCase().contains("SELECT")){
                    SwingUtilities.invokeLater(() -> {
                        try{
                            jtb.setModel(modelo(sql)); 
                            lb.setText(res);
                            if(jtb.getColumnCount() <= 15){ jtb.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);}
                            else{jtb.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);}
                        }catch(Exception ex){new Logs.Error().error(ex.getMessage());}
                    });
                }else{
                    insertar(sql);
                    lb.setText(res);
                    jtb.setModel(new DefaultTableModel());
                }
                res = "";
            });
        JScrollPane jsp1 = new javax.swing.JScrollPane();
            jsp1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
            jsp1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            jsp1.setViewportView(jtaconsulta);
                  
            botonera.setLayout(new BorderLayout());
            botonera.add(jmb,BorderLayout.NORTH);    
            botonera.add(jsp1,BorderLayout.CENTER);
            botonera.add(btncon,BorderLayout.EAST);
            
            panel.setLayout(new BorderLayout());
            panel.add(botonera,BorderLayout.NORTH);          
            panel.add(jsp,BorderLayout.CENTER);
            panel.add(lb,BorderLayout.SOUTH);
            
            expCSV.addActionListener((ActionEvent e) -> {
                DefaultTableModel[] tablas = {(DefaultTableModel)jtb.getModel()};
                new other.exportarTxt().exportar(tablas, getTitle(),"txt");
            });
            copyrowvalue.addActionListener((ActionEvent e) -> {
                int r = jtb.getSelectedRow();
                int c = jtb.getSelectedColumn();
                if( r != -1 && c != -1 ){
                    StringSelection valor = new StringSelection(String.valueOf(jtb.getValueAt(r, c)));
                    Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
                    cb.setContents(valor, valor);
                }else{Logs.emergente.mostrar("No has seleccionado algun valor", "Alerta");}
                
            });
            ver.addActionListener((ActionEvent e) -> {
                int r = jtb.getSelectedRow();
                int c = jtb.getSelectedColumn();
                if( r != -1 && c != -1 ){new Ver(String.valueOf(jtb.getValueAt(r, c))).setVisible(true);}
            }); 
        jTabbedPane1.addTab("Pesta√±a "+cont, panel);
    }
    
    DefaultTableModel modelo(String sql){
        Connection cn = Conector.conexion();
        DefaultTableModel model = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int rowIndex,int columnIndex){return false;}
        };
        try{
            
            long inicio = System.currentTimeMillis();
            
            PreparedStatement pst = cn.prepareStatement(sql);                    
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData metadata = rs.getMetaData();
            int cantidadColumnas = metadata.getColumnCount();
            for (int i = 1; i <= cantidadColumnas; i++) {
                model.addColumn(metadata.getColumnLabel(i));
            }while (rs.next()) {
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i]=rs.getObject(i+1);
                }
                model.addRow(fila);
                
                long fin = System.currentTimeMillis();
                double tiempo = fin - inicio;
                
                res = " "+tiempo+" ms "+model.getRowCount()+" resultados, "+model.getColumnCount()+" columnas.";
            }  
        }catch(SQLException ex){
            new Logs.Error().error(ex.getMessage());
        }
        try{ cn.close(); }catch(SQLException e){ new Logs.Error().error(e.getMessage()); }
        return model;
    }
    
    void insertar(String sql){
        Connection cn = Conector.conexion();
        try{
            PreparedStatement pst = cn.prepareStatement(sql);
            int n = pst.executeUpdate();
            if(n>0)res = n+" Filas afectadas por consulta,no se regresa algun resultado.";
        }catch(SQLException e){
            new Logs.Error().error(e.getMessage());
        }
        try{ cn.close(); }catch(SQLException e){ new Logs.Error().error(e.getMessage()); }
    }
    
    public DefaultTreeModel cargarArbol() {
        DefaultMutableTreeNode categorias = null;
        Titulo = new DefaultMutableTreeNode(Conector.base);
        modelo = new DefaultTreeModel(Titulo);
        try {
            Vector vec = Bll.ListarTablas();
            for(int k=0;k<vec.size();k++){
                categorias = new DefaultMutableTreeNode(vec.elementAt(k).toString());
                modelo.insertNodeInto(categorias, Titulo, 0);
            }
        } catch (Exception ex) {
            new Logs.Error().error(ex.getMessage());
        }
        return modelo;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Principal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        switch(e.getActionCommand()){
            case "Agregar pesta√±a de resultados":
                        addPanel();
                        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);
                break;
        }
    }
}
