/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bDemos;

import Conexion.Conector;
import Inicio.Sesion;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author ChristianArias
 */
public final class listarMovimientos extends javax.swing.JInternalFrame {

    /**
     * Creates new form listarMovimientos
     */
    SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
    
    public listarMovimientos() {
        initComponents();
        Dimension pantalla = Principal.Escritorio.vPantalla.getSize();
        setSize(pantalla.width-10,pantalla.height-150);
        jDateChooser1.setDate(new other.hora().date());
        jDateChooser2.setDate(new other.hora().date());
        modelo();
        setCellRenderer(jTable1);
        ScheduledExecutorService timer = Executors.newSingleThreadScheduledExecutor();
            timer.scheduleAtFixedRate(tarea, 1, 90, TimeUnit.SECONDS);
        jLabel1.setText(Sesion.nombreagencia);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();

        setMaximizable(true);
        setResizable(true);
        setTitle("Movimientos realizados");

        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jTable1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jLabel1.setText("jLabel1");

        jMenu1.setText("Archivo");

        jMenu2.setText("Exportar");

        jMenuItem3.setText("Excel");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenu1.add(jMenu2);
        jMenu1.add(jSeparator1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        jTable1.setModel(cargar());
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        //javax.swing.JTable[] tablas = {jTable1};
        DefaultTableModel[] tablas = {(DefaultTableModel)jTable1.getModel()};
        new other.exportarTxt().exportar(tablas, getTitle(),"txt");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    public void setCellRenderer(JTable jTable1) {
        Enumeration<TableColumn> en = jTable1.getColumnModel().getColumns();
        while (en.hasMoreElements()) {
            TableColumn tc = en.nextElement();
            tc.setCellRenderer(new other.CellRenderer());
        }
    }
    
    void modelo(){
        String titulos[] = null ;
        if(Inicio.Sesion.admin){
            titulos = new String[14];
                titulos[0] = "registro";
                titulos[1] = "Vehiculo";
                titulos[2] = "Serie";
                titulos[3] = "Placas";
                titulos[4] = "Conducido por";
                titulos[5] = "Salida";
                titulos[6] = "Llegada";
                titulos[7] = "";
                titulos[8] = "KM inicial";
                titulos[9] = "KM final";
                titulos[10] = "";
                titulos[11] = "Creo";
                titulos[12] = "Actualizo";
                titulos[13] = "Fecha";
        }else{
            titulos = new String[11];
                titulos[0] = "registro";
                titulos[1] = "Vehiculo";
                titulos[2] = "Serie";
                titulos[3] = "Placas";
                titulos[4] = "Conducido por";
                titulos[5] = "Salida";
                titulos[6] = "Llegada";
                titulos[7] = "";
                titulos[8] = "KM inicial";
                titulos[9] = "KM final";
                titulos[10] = "";
        }
        DefaultTableModel model = new DefaultTableModel(null,titulos);
        jTable1.setModel(model);
        for(int i = 0;i<3;i+=2){
            jTable1.getColumnModel().getColumn(i).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(i).setMinWidth(0);
            jTable1.getColumnModel().getColumn(i).setPreferredWidth(0);
        }
    }
    
    DefaultTableModel cargar(){
        Connection cn = Conector.conexion();
        DefaultTableModel model =(DefaultTableModel)jTable1.getModel();
        try{
            String sql = "SELECT * FROM vistaRegistroDemos WHERE "
                    + "(demo LIKE ? OR serie LIKE ? OR placas LIKE ? OR conducido LIKE ?) "
                    + "AND fechaSalida BETWEEN ? AND ? AND _agencia LIKE ?";
            Object [] registros = new Object [jTable1.getColumnCount()];
            int x = 0;
            String aux = null;
            model.setRowCount(0);
            PreparedStatement pst = cn.prepareStatement(sql);
                pst.setString(1, "%"+jTextField1.getText()+"%");
                pst.setString(2, "%"+jTextField1.getText()+"%");
                pst.setString(3, "%"+jTextField1.getText()+"%");
                pst.setString(4, "%"+jTextField1.getText()+"%");
                pst.setString(5, String.valueOf(dcn.format(jDateChooser1.getDate())));
                pst.setString(6, String.valueOf(dcn.format(jDateChooser2.getDate())));
                pst.setString(7, "%"+Sesion.nombreagencia+"%");
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                registros[0] = rs.getString("registro");
                registros[1] = rs.getString("demo");
                registros[2] = rs.getString("serie");
                registros[3] = rs.getString("placas");
                registros[4] = rs.getString("conducido");
                registros[5] = rs.getString("fechaSalida")+" "+rs.getString("Salida");
                
                boolean res = rs.getBoolean("activo");
                if(res==false){
                    registros[6] = "En movimiento"; 
                    registros[7] = "En movimiento"; 
                }else {
                    registros[6] = rs.getString("fechaLlegada")+" "+rs.getString("Llegada");
                    registros[7] = rs.getString("tiempo");
                }
                
                registros[8] = rs.getString("kmini")+" KM";
                registros[9] = rs.getString("kmfin")+" KM";
                registros[10] = rs.getString("km");
                if(Inicio.Sesion.admin){
                    registros[11] = rs.getString("creador");
                    registros[12] = rs.getString("editor");
                    registros[13] = rs.getString("fechaAct");
                }
                model.addRow(registros);
                x = rs.getRow();
                aux = Integer.toString(x);
            }
            model.fireTableDataChanged();
        }catch(SQLException e){
            new Logs.Error().error(e.getMessage());
        }
        try{ cn.close(); }catch(SQLException e){ new Logs.Error().error(e.getMessage()); }
        return model;
    }
    
    public Runnable tarea = () -> { 
        load();
    };
    
    public void load(){
        jTable1.setModel(cargar());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
